// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: v1/player.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*GetPlayerRequest_Id
	//	*GetPlayerRequest_Name
	Identifier    isGetPlayerRequest_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerRequest) Reset() {
	*x = GetPlayerRequest{}
	mi := &file_v1_player_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRequest) ProtoMessage() {}

func (x *GetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_player_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_v1_player_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlayerRequest) GetIdentifier() isGetPlayerRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GetPlayerRequest) GetId() int32 {
	if x != nil {
		if x, ok := x.Identifier.(*GetPlayerRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetPlayerRequest) GetName() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetPlayerRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

type isGetPlayerRequest_Identifier interface {
	isGetPlayerRequest_Identifier()
}

type GetPlayerRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetPlayerRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*GetPlayerRequest_Id) isGetPlayerRequest_Identifier() {}

func (*GetPlayerRequest_Name) isGetPlayerRequest_Identifier() {}

type GetPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *Player                `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerResponse) Reset() {
	*x = GetPlayerResponse{}
	mi := &file_v1_player_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerResponse) ProtoMessage() {}

func (x *GetPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_player_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerResponse) Descriptor() ([]byte, []int) {
	return file_v1_player_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type Player struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GroupId             int32                  `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AccountId           int32                  `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Level               int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Vocation            int32                  `protobuf:"varint,6,opt,name=vocation,proto3" json:"vocation,omitempty"`
	Health              int32                  `protobuf:"varint,7,opt,name=health,proto3" json:"health,omitempty"`
	Healthmax           int32                  `protobuf:"varint,8,opt,name=healthmax,proto3" json:"healthmax,omitempty"`
	Experience          uint64                 `protobuf:"varint,9,opt,name=experience,proto3" json:"experience,omitempty"`
	Lookbody            int32                  `protobuf:"varint,10,opt,name=lookbody,proto3" json:"lookbody,omitempty"`
	Lookfeet            int32                  `protobuf:"varint,11,opt,name=lookfeet,proto3" json:"lookfeet,omitempty"`
	Lookhead            int32                  `protobuf:"varint,12,opt,name=lookhead,proto3" json:"lookhead,omitempty"`
	Looklegs            int32                  `protobuf:"varint,13,opt,name=looklegs,proto3" json:"looklegs,omitempty"`
	Looktype            int32                  `protobuf:"varint,14,opt,name=looktype,proto3" json:"looktype,omitempty"`
	Lookaddons          int32                  `protobuf:"varint,15,opt,name=lookaddons,proto3" json:"lookaddons,omitempty"`
	Maglevel            int32                  `protobuf:"varint,16,opt,name=maglevel,proto3" json:"maglevel,omitempty"`
	Mana                int32                  `protobuf:"varint,17,opt,name=mana,proto3" json:"mana,omitempty"`
	Manamax             int32                  `protobuf:"varint,18,opt,name=manamax,proto3" json:"manamax,omitempty"`
	Manaspent           uint64                 `protobuf:"varint,19,opt,name=manaspent,proto3" json:"manaspent,omitempty"`
	Soul                uint32                 `protobuf:"varint,20,opt,name=soul,proto3" json:"soul,omitempty"`
	TownId              int32                  `protobuf:"varint,21,opt,name=town_id,json=townId,proto3" json:"town_id,omitempty"`
	Posx                int32                  `protobuf:"varint,22,opt,name=posx,proto3" json:"posx,omitempty"`
	Posy                int32                  `protobuf:"varint,23,opt,name=posy,proto3" json:"posy,omitempty"`
	Posz                int32                  `protobuf:"varint,24,opt,name=posz,proto3" json:"posz,omitempty"`
	Conditions          []byte                 `protobuf:"bytes,25,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Cap                 int32                  `protobuf:"varint,26,opt,name=cap,proto3" json:"cap,omitempty"`
	Sex                 int32                  `protobuf:"varint,27,opt,name=sex,proto3" json:"sex,omitempty"`
	Lastlogin           uint64                 `protobuf:"varint,28,opt,name=lastlogin,proto3" json:"lastlogin,omitempty"`
	Lastip              uint32                 `protobuf:"varint,29,opt,name=lastip,proto3" json:"lastip,omitempty"`
	Save                bool                   `protobuf:"varint,30,opt,name=save,proto3" json:"save,omitempty"`
	Skull               int32                  `protobuf:"varint,31,opt,name=skull,proto3" json:"skull,omitempty"`
	Skulltime           int64                  `protobuf:"varint,32,opt,name=skulltime,proto3" json:"skulltime,omitempty"`
	Lastlogout          uint64                 `protobuf:"varint,33,opt,name=lastlogout,proto3" json:"lastlogout,omitempty"`
	Blessings           int32                  `protobuf:"varint,34,opt,name=blessings,proto3" json:"blessings,omitempty"`
	Onlinetime          int64                  `protobuf:"varint,35,opt,name=onlinetime,proto3" json:"onlinetime,omitempty"`
	Deletion            int64                  `protobuf:"varint,36,opt,name=deletion,proto3" json:"deletion,omitempty"`
	Balance             uint64                 `protobuf:"varint,37,opt,name=balance,proto3" json:"balance,omitempty"`
	Stamina             uint32                 `protobuf:"varint,38,opt,name=stamina,proto3" json:"stamina,omitempty"`
	SkillFist           uint32                 `protobuf:"varint,39,opt,name=skill_fist,json=skillFist,proto3" json:"skill_fist,omitempty"`
	SkillFistTries      uint64                 `protobuf:"varint,40,opt,name=skill_fist_tries,json=skillFistTries,proto3" json:"skill_fist_tries,omitempty"`
	SkillClub           uint32                 `protobuf:"varint,41,opt,name=skill_club,json=skillClub,proto3" json:"skill_club,omitempty"`
	SkillClubTries      uint64                 `protobuf:"varint,42,opt,name=skill_club_tries,json=skillClubTries,proto3" json:"skill_club_tries,omitempty"`
	SkillSword          uint32                 `protobuf:"varint,43,opt,name=skill_sword,json=skillSword,proto3" json:"skill_sword,omitempty"`
	SkillSwordTries     uint64                 `protobuf:"varint,44,opt,name=skill_sword_tries,json=skillSwordTries,proto3" json:"skill_sword_tries,omitempty"`
	SkillAxe            uint32                 `protobuf:"varint,45,opt,name=skill_axe,json=skillAxe,proto3" json:"skill_axe,omitempty"`
	SkillAxeTries       uint64                 `protobuf:"varint,46,opt,name=skill_axe_tries,json=skillAxeTries,proto3" json:"skill_axe_tries,omitempty"`
	SkillDist           uint32                 `protobuf:"varint,47,opt,name=skill_dist,json=skillDist,proto3" json:"skill_dist,omitempty"`
	SkillDistTries      uint64                 `protobuf:"varint,48,opt,name=skill_dist_tries,json=skillDistTries,proto3" json:"skill_dist_tries,omitempty"`
	SkillShielding      uint32                 `protobuf:"varint,49,opt,name=skill_shielding,json=skillShielding,proto3" json:"skill_shielding,omitempty"`
	SkillShieldingTries uint64                 `protobuf:"varint,50,opt,name=skill_shielding_tries,json=skillShieldingTries,proto3" json:"skill_shielding_tries,omitempty"`
	SkillFishing        uint32                 `protobuf:"varint,51,opt,name=skill_fishing,json=skillFishing,proto3" json:"skill_fishing,omitempty"`
	SkillFishingTries   uint64                 `protobuf:"varint,52,opt,name=skill_fishing_tries,json=skillFishingTries,proto3" json:"skill_fishing_tries,omitempty"`
	Created             int32                  `protobuf:"varint,53,opt,name=created,proto3" json:"created,omitempty"`
	Hidden              bool                   `protobuf:"varint,54,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Comment             string                 `protobuf:"bytes,55,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_v1_player_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_v1_player_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_v1_player_proto_rawDescGZIP(), []int{2}
}

func (x *Player) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Player) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Player) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Player) GetVocation() int32 {
	if x != nil {
		return x.Vocation
	}
	return 0
}

func (x *Player) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Player) GetHealthmax() int32 {
	if x != nil {
		return x.Healthmax
	}
	return 0
}

func (x *Player) GetExperience() uint64 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *Player) GetLookbody() int32 {
	if x != nil {
		return x.Lookbody
	}
	return 0
}

func (x *Player) GetLookfeet() int32 {
	if x != nil {
		return x.Lookfeet
	}
	return 0
}

func (x *Player) GetLookhead() int32 {
	if x != nil {
		return x.Lookhead
	}
	return 0
}

func (x *Player) GetLooklegs() int32 {
	if x != nil {
		return x.Looklegs
	}
	return 0
}

func (x *Player) GetLooktype() int32 {
	if x != nil {
		return x.Looktype
	}
	return 0
}

func (x *Player) GetLookaddons() int32 {
	if x != nil {
		return x.Lookaddons
	}
	return 0
}

func (x *Player) GetMaglevel() int32 {
	if x != nil {
		return x.Maglevel
	}
	return 0
}

func (x *Player) GetMana() int32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

func (x *Player) GetManamax() int32 {
	if x != nil {
		return x.Manamax
	}
	return 0
}

func (x *Player) GetManaspent() uint64 {
	if x != nil {
		return x.Manaspent
	}
	return 0
}

func (x *Player) GetSoul() uint32 {
	if x != nil {
		return x.Soul
	}
	return 0
}

func (x *Player) GetTownId() int32 {
	if x != nil {
		return x.TownId
	}
	return 0
}

func (x *Player) GetPosx() int32 {
	if x != nil {
		return x.Posx
	}
	return 0
}

func (x *Player) GetPosy() int32 {
	if x != nil {
		return x.Posy
	}
	return 0
}

func (x *Player) GetPosz() int32 {
	if x != nil {
		return x.Posz
	}
	return 0
}

func (x *Player) GetConditions() []byte {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Player) GetCap() int32 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *Player) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Player) GetLastlogin() uint64 {
	if x != nil {
		return x.Lastlogin
	}
	return 0
}

func (x *Player) GetLastip() uint32 {
	if x != nil {
		return x.Lastip
	}
	return 0
}

func (x *Player) GetSave() bool {
	if x != nil {
		return x.Save
	}
	return false
}

func (x *Player) GetSkull() int32 {
	if x != nil {
		return x.Skull
	}
	return 0
}

func (x *Player) GetSkulltime() int64 {
	if x != nil {
		return x.Skulltime
	}
	return 0
}

func (x *Player) GetLastlogout() uint64 {
	if x != nil {
		return x.Lastlogout
	}
	return 0
}

func (x *Player) GetBlessings() int32 {
	if x != nil {
		return x.Blessings
	}
	return 0
}

func (x *Player) GetOnlinetime() int64 {
	if x != nil {
		return x.Onlinetime
	}
	return 0
}

func (x *Player) GetDeletion() int64 {
	if x != nil {
		return x.Deletion
	}
	return 0
}

func (x *Player) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Player) GetStamina() uint32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *Player) GetSkillFist() uint32 {
	if x != nil {
		return x.SkillFist
	}
	return 0
}

func (x *Player) GetSkillFistTries() uint64 {
	if x != nil {
		return x.SkillFistTries
	}
	return 0
}

func (x *Player) GetSkillClub() uint32 {
	if x != nil {
		return x.SkillClub
	}
	return 0
}

func (x *Player) GetSkillClubTries() uint64 {
	if x != nil {
		return x.SkillClubTries
	}
	return 0
}

func (x *Player) GetSkillSword() uint32 {
	if x != nil {
		return x.SkillSword
	}
	return 0
}

func (x *Player) GetSkillSwordTries() uint64 {
	if x != nil {
		return x.SkillSwordTries
	}
	return 0
}

func (x *Player) GetSkillAxe() uint32 {
	if x != nil {
		return x.SkillAxe
	}
	return 0
}

func (x *Player) GetSkillAxeTries() uint64 {
	if x != nil {
		return x.SkillAxeTries
	}
	return 0
}

func (x *Player) GetSkillDist() uint32 {
	if x != nil {
		return x.SkillDist
	}
	return 0
}

func (x *Player) GetSkillDistTries() uint64 {
	if x != nil {
		return x.SkillDistTries
	}
	return 0
}

func (x *Player) GetSkillShielding() uint32 {
	if x != nil {
		return x.SkillShielding
	}
	return 0
}

func (x *Player) GetSkillShieldingTries() uint64 {
	if x != nil {
		return x.SkillShieldingTries
	}
	return 0
}

func (x *Player) GetSkillFishing() uint32 {
	if x != nil {
		return x.SkillFishing
	}
	return 0
}

func (x *Player) GetSkillFishingTries() uint64 {
	if x != nil {
		return x.SkillFishingTries
	}
	return 0
}

func (x *Player) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Player) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Player) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

var File_v1_player_proto protoreflect.FileDescriptor

const file_v1_player_proto_rawDesc = "" +
	"\n" +
	"\x0fv1/player.proto\x12\x06api.v1\"H\n" +
	"\x10GetPlayerRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\x05H\x00R\x02id\x12\x14\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04nameB\f\n" +
	"\n" +
	"identifier\";\n" +
	"\x11GetPlayerResponse\x12&\n" +
	"\x06player\x18\x01 \x01(\v2\x0e.api.v1.PlayerR\x06player\"\xc6\f\n" +
	"\x06Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\x05R\agroupId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x04 \x01(\x05R\taccountId\x12\x14\n" +
	"\x05level\x18\x05 \x01(\x05R\x05level\x12\x1a\n" +
	"\bvocation\x18\x06 \x01(\x05R\bvocation\x12\x16\n" +
	"\x06health\x18\a \x01(\x05R\x06health\x12\x1c\n" +
	"\thealthmax\x18\b \x01(\x05R\thealthmax\x12\x1e\n" +
	"\n" +
	"experience\x18\t \x01(\x04R\n" +
	"experience\x12\x1a\n" +
	"\blookbody\x18\n" +
	" \x01(\x05R\blookbody\x12\x1a\n" +
	"\blookfeet\x18\v \x01(\x05R\blookfeet\x12\x1a\n" +
	"\blookhead\x18\f \x01(\x05R\blookhead\x12\x1a\n" +
	"\blooklegs\x18\r \x01(\x05R\blooklegs\x12\x1a\n" +
	"\blooktype\x18\x0e \x01(\x05R\blooktype\x12\x1e\n" +
	"\n" +
	"lookaddons\x18\x0f \x01(\x05R\n" +
	"lookaddons\x12\x1a\n" +
	"\bmaglevel\x18\x10 \x01(\x05R\bmaglevel\x12\x12\n" +
	"\x04mana\x18\x11 \x01(\x05R\x04mana\x12\x18\n" +
	"\amanamax\x18\x12 \x01(\x05R\amanamax\x12\x1c\n" +
	"\tmanaspent\x18\x13 \x01(\x04R\tmanaspent\x12\x12\n" +
	"\x04soul\x18\x14 \x01(\rR\x04soul\x12\x17\n" +
	"\atown_id\x18\x15 \x01(\x05R\x06townId\x12\x12\n" +
	"\x04posx\x18\x16 \x01(\x05R\x04posx\x12\x12\n" +
	"\x04posy\x18\x17 \x01(\x05R\x04posy\x12\x12\n" +
	"\x04posz\x18\x18 \x01(\x05R\x04posz\x12\x1e\n" +
	"\n" +
	"conditions\x18\x19 \x01(\fR\n" +
	"conditions\x12\x10\n" +
	"\x03cap\x18\x1a \x01(\x05R\x03cap\x12\x10\n" +
	"\x03sex\x18\x1b \x01(\x05R\x03sex\x12\x1c\n" +
	"\tlastlogin\x18\x1c \x01(\x04R\tlastlogin\x12\x16\n" +
	"\x06lastip\x18\x1d \x01(\rR\x06lastip\x12\x12\n" +
	"\x04save\x18\x1e \x01(\bR\x04save\x12\x14\n" +
	"\x05skull\x18\x1f \x01(\x05R\x05skull\x12\x1c\n" +
	"\tskulltime\x18  \x01(\x03R\tskulltime\x12\x1e\n" +
	"\n" +
	"lastlogout\x18! \x01(\x04R\n" +
	"lastlogout\x12\x1c\n" +
	"\tblessings\x18\" \x01(\x05R\tblessings\x12\x1e\n" +
	"\n" +
	"onlinetime\x18# \x01(\x03R\n" +
	"onlinetime\x12\x1a\n" +
	"\bdeletion\x18$ \x01(\x03R\bdeletion\x12\x18\n" +
	"\abalance\x18% \x01(\x04R\abalance\x12\x18\n" +
	"\astamina\x18& \x01(\rR\astamina\x12\x1d\n" +
	"\n" +
	"skill_fist\x18' \x01(\rR\tskillFist\x12(\n" +
	"\x10skill_fist_tries\x18( \x01(\x04R\x0eskillFistTries\x12\x1d\n" +
	"\n" +
	"skill_club\x18) \x01(\rR\tskillClub\x12(\n" +
	"\x10skill_club_tries\x18* \x01(\x04R\x0eskillClubTries\x12\x1f\n" +
	"\vskill_sword\x18+ \x01(\rR\n" +
	"skillSword\x12*\n" +
	"\x11skill_sword_tries\x18, \x01(\x04R\x0fskillSwordTries\x12\x1b\n" +
	"\tskill_axe\x18- \x01(\rR\bskillAxe\x12&\n" +
	"\x0fskill_axe_tries\x18. \x01(\x04R\rskillAxeTries\x12\x1d\n" +
	"\n" +
	"skill_dist\x18/ \x01(\rR\tskillDist\x12(\n" +
	"\x10skill_dist_tries\x180 \x01(\x04R\x0eskillDistTries\x12'\n" +
	"\x0fskill_shielding\x181 \x01(\rR\x0eskillShielding\x122\n" +
	"\x15skill_shielding_tries\x182 \x01(\x04R\x13skillShieldingTries\x12#\n" +
	"\rskill_fishing\x183 \x01(\rR\fskillFishing\x12.\n" +
	"\x13skill_fishing_tries\x184 \x01(\x04R\x11skillFishingTries\x12\x18\n" +
	"\acreated\x185 \x01(\x05R\acreated\x12\x16\n" +
	"\x06hidden\x186 \x01(\bR\x06hidden\x12\x18\n" +
	"\acomment\x187 \x01(\tR\acomment2Q\n" +
	"\rPlayerService\x12@\n" +
	"\tGetPlayer\x12\x18.api.v1.GetPlayerRequest\x1a\x19.api.v1.GetPlayerResponseB9Z7github.com/danilopucci/opentibiagateway/api/proto/v1;v1b\x06proto3"

var (
	file_v1_player_proto_rawDescOnce sync.Once
	file_v1_player_proto_rawDescData []byte
)

func file_v1_player_proto_rawDescGZIP() []byte {
	file_v1_player_proto_rawDescOnce.Do(func() {
		file_v1_player_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_player_proto_rawDesc), len(file_v1_player_proto_rawDesc)))
	})
	return file_v1_player_proto_rawDescData
}

var file_v1_player_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_player_proto_goTypes = []any{
	(*GetPlayerRequest)(nil),  // 0: api.v1.GetPlayerRequest
	(*GetPlayerResponse)(nil), // 1: api.v1.GetPlayerResponse
	(*Player)(nil),            // 2: api.v1.Player
}
var file_v1_player_proto_depIdxs = []int32{
	2, // 0: api.v1.GetPlayerResponse.player:type_name -> api.v1.Player
	0, // 1: api.v1.PlayerService.GetPlayer:input_type -> api.v1.GetPlayerRequest
	1, // 2: api.v1.PlayerService.GetPlayer:output_type -> api.v1.GetPlayerResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_player_proto_init() }
func file_v1_player_proto_init() {
	if File_v1_player_proto != nil {
		return
	}
	file_v1_player_proto_msgTypes[0].OneofWrappers = []any{
		(*GetPlayerRequest_Id)(nil),
		(*GetPlayerRequest_Name)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_player_proto_rawDesc), len(file_v1_player_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_player_proto_goTypes,
		DependencyIndexes: file_v1_player_proto_depIdxs,
		MessageInfos:      file_v1_player_proto_msgTypes,
	}.Build()
	File_v1_player_proto = out.File
	file_v1_player_proto_goTypes = nil
	file_v1_player_proto_depIdxs = nil
}
